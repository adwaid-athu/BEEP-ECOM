<%- include('../partials/user/header.ejs') %>

<div class="container mt-5">
    <h2>Order Details</h2>

    <!-- Order Information -->
    <div class="card mb-4">
        <div class="card-header">Order Information</div>
        <div class="card-body">
            <p><strong>Order ID:</strong> <%= order.orderId %></p>
            <p><strong>Invoice Date:</strong> <%= new Date(order.invoiceDate).toLocaleDateString() %></p>
            <p><strong>Created On:</strong> <%= new Date(order.createdOn).toLocaleDateString() %></p>
            <p><strong>Status:</strong> <%= order.status %></p>
        </div>
    </div>

    <!-- Customer Information -->
    <div class="card mb-4">
        <div class="card-header">Shipping Information</div>
        <div class="card-body">
            <p><strong>Name:</strong> <%= order.address[0].name %></p>
            <p><strong>Address:</strong> <%= order.address[0].landMark %>, <%= order.address[0].city %>, <%= order.address[0].state %>, <%= order.address[0].pincode %></p>
            <p><strong>Phone:</strong> <%= order.address[0].phone %></p>
            <p><strong>Alternate Phone:</strong> <%= order.address[0].altPhone || 'N/A' %></p>
        </div>
    </div>

    <!-- Ordered Items Table -->
    <div class="table-responsive mb-4">
        <table class="table table-bordered">
            <thead class="table-dark">
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                </tr>
            </thead>
            <tbody>
                <% order.orderedItems.forEach(item => { %>
                    <tr>
                        <td><%= item.product.productName %></td>
                        <td><%= item.quantity %></td>
                        <td>₹<%= item.product.salePrice %></td>
                        <td>₹<%= (item.product.salePrice * item.quantity).toFixed(2) %></td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>

    <!-- Payment and Summary -->
    <div class="card">
        <div class="card-header">Payment & Summary</div>
        <div class="card-body">
            <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
            <p><strong>Total Price:</strong> ₹<%= order.totalPrice ? order.totalPrice.toFixed(2) : "0.00" %></p>
            <p><strong>Discount:</strong> ₹<%= order.discount ? order.discount.toFixed(2) : "0.00" %></p>
            <p><strong>Final Amount:</strong> ₹<%= order.finalAmount ? order.finalAmount.toFixed(2) : "0.00" %></p>
            <p><strong>Coupon Applied:</strong> <%= order.couponApplied ? 'Yes' : 'No' %></p>
        </div>
    </div>

    <div class="mt-4">
        <a href="/dashboard" class="btn btn-secondary">Back to Orders</a>
    <% if (order.status !== 'Cancelled') { %>
        <button id="cancelOrderBtn" class="btn btn-danger">Cancel Order</button>
    <% } %>
    </div>
</div>

<%- include('../partials/user/footer.ejs') %>

<style>
    .card-header {
        font-weight: bold;
        font-size: 1.1rem;
    }
    .table td, .table th {
        text-align: center;
        vertical-align: middle;
    }
</style>
<script>
    const orderId = "<%=order.orderId%>" 
  document.getElementById("cancelOrderBtn").addEventListener("click", async function() {
    Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to cancel this order?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, cancel it!",
        cancelButtonText: "No, keep it",
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                
                const response = await fetch(`/cancel/${orderId}`, { method: 'post' });
                if (response.ok) {
                    Swal.fire({
                        title: "Cancelled!",
                        text: "Your order has been cancelled successfully.",
                        icon: "success",
                        confirmButtonColor: "#3085d6",
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        title: "Error",
                        text: "Failed to cancel the order. Please try again.",
                        icon: "error",
                        confirmButtonColor: "#3085d6",
                    });
                }
            } catch (error) {
                console.error("Error cancelling order:", error);
                Swal.fire({
                    title: "Error",
                    text: "An error occurred. Please try again.",
                    icon: "error",
                    confirmButtonColor: "#3085d6",
                });
            }
        }
    });
});

</script>
