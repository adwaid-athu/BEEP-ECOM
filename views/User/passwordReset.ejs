<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Reset</title>
    <link rel="stylesheet" href="/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/css/plugins/owl-carousel/owl.carousel.css">
    <link rel="stylesheet" href="/assets/css/plugins/magnific-popup/magnific-popup.css">
    <link rel="stylesheet" href="/assets/css/style.css">
    <link rel="stylesheet" href="/assets/css/demos/demo-12.css">
    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css'>
    <style>
        .password-reset-container {
            margin-top: 50px;
            background: #f8f9fa;
            padding: 40px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }
        h2 {
            font-weight: 600;
            margin-bottom: 30px;
        }
        .form-label {
            font-weight: bold;
        }
        .text-danger {
            font-size: 0.85em;
        }
    </style>
</head>
<body>

<div class="container mt-6 p-5 password-reset-container">
    <h2>Password Reset</h2>
    <form id="passwordResetForm">
        <div class="mb-3">
            <label for="currentPassword" class="form-label">Current Password:</label>
            <input type="password" id="currentPassword" name="currentPassword" class="form-control">
            <div class="text-danger" id="currentPasswordError"></div>
        </div>
        <div class="mb-3">
            <label for="newPassword" class="form-label">New Password:</label>
            <input type="password" id="newPassword" name="newPassword" class="form-control">
            <div class="text-danger" id="newPasswordError"></div>
        </div>
        <div class="mb-3">
            <label for="confirmPassword" class="form-label">Confirm Password:</label>
            <input type="password" id="confirmPassword" name="confirmPassword" class="form-control">
            <div class="text-danger" id="confirmPasswordError"></div>
        </div>
        <button type="submit" class="btn btn-primary w-100">Reset Password</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.getElementById('passwordResetForm').addEventListener('submit', async function(event) {
        event.preventDefault(); 
        let valid = true;

       
        document.getElementById('currentPasswordError').textContent = '';
        document.getElementById('newPasswordError').textContent = '';
        document.getElementById('confirmPasswordError').textContent = '';

        
        const currentPassword = document.getElementById('currentPassword').value.trim();
        const newPassword = document.getElementById('newPassword').value.trim();
        const confirmPassword = document.getElementById('confirmPassword').value.trim();

        
        if (currentPassword.length === 0) {
            document.getElementById('currentPasswordError').textContent = 'Current password is required.';
            valid = false;
        }

        
        if (newPassword.length < 8) {
            document.getElementById('newPasswordError').textContent = 'New password must be at least 8 characters long.';
            valid = false;
        }

        
        if (newPassword !== confirmPassword) {
            document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
            valid = false;
        }

        
        if (!valid) {
            return; 
        }

       
        try {
            const response = await fetch('/saveNewPassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ currentPassword, newPassword, confirmPassword })
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    title: 'Password Reset Successfully',
                    icon: 'success',
                    showConfirmButton: false,
                    timer: 1500
                });
                setTimeout(() => {
                    window.location.href = '/login'; 
                }, 1500);
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: result.message || 'An error occurred. Please try again.'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while processing your request.'
            });
        }
    });
</script>

</body>
</html>
