<%- include('../partials/admin/adminHeader.ejs') %>
<div class="container mt-5">
    <h1 class="text-center">Update Offer</h1>

    <div class="card mt-4">
        <div class="card-body">
            <form id="updateOfferForm">
                <div class="form-group">
                    <label for="title">Offer Title <span class="text-danger">*</span></label>
                    <input 
                        type="text" 
                        class="form-control" 
                        id="title" 
                        name="title" 
                        placeholder="Enter offer title" 
                        value="<%= offer.title %>"
                    >
                    <small id="titleError" class="form-text text-danger d-none">Title must be between 3 and 50 characters.</small>
                </div>

                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea 
                        class="form-control" 
                        id="description" 
                        name="description" 
                        rows="4" 
                        placeholder="Enter a brief description (optional)"
                    ><%=  offer.description %></textarea>
                </div>

                <div class="form-group">
                    <label for="discount">Discount (%) <span class="text-danger">*</span></label>
                    <input 
                        type="number" 
                        class="form-control" 
                        id="discount" 
                        name="discount" 
                        placeholder="Enter discount value (e.g., 10 for 10%)"  
                        min="1"
                        value="<%= offer.discount %>"
                    >
                    <small id="discountError" class="form-text text-danger d-none">Discount value must be a positive number.</small>
                </div>

                <div class="text-right">
                    <button type="submit" class="btn btn-success">Update Offer</button>
                    <a href="/admin/offers" class="btn btn-secondary">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .card {
        max-width: 600px;
        margin: 0 auto;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        padding: 20px;
    }

    .form-group label {
        font-weight: bold;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .form-text {
        margin-top: 5px;
    }

    .d-none {
        display: none;
    }
</style>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

const form = document.getElementById('updateOfferForm');
const titleInput = document.getElementById('title');
const descriptionInput = document.getElementById('description');
const discountInput = document.getElementById('discount');

form.addEventListener('submit', async (event) => {
    event.preventDefault();

    // Extract the offer ID from the URL
    const url = window.location.pathname;
    const segments = url.split("/");
    const offerId = segments[segments.length - 1]; // Get the last segment of the URL

    const title = titleInput.value.trim();
    const description = descriptionInput.value.trim();
    const discount = discountInput.value.trim();

    let errorMessages = [];
    if (title.length < 3 || title.length > 50) {
        errorMessages.push("Title must be between 3 and 50 characters.");
    }
    if (!discount || isNaN(discount) || discount <= 0) {
        errorMessages.push("Discount value must be a positive number.");
    }

    if (errorMessages.length > 0) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            html: errorMessages.join('<br>'),
        });
        return;
    }

    Swal.fire({
        title: 'Processing...',
        text: 'Please wait while the offer is being updated.',
        allowOutsideClick: false,
        didOpen: () => {
            Swal.showLoading();
        }
    });

    try {
        // Perform the API call to update the offer
        const response = await fetch(`/admin/offer/update/${offerId}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ title, description, discount }),
        });

        const result = await response.json();
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: result.message || 'The offer has been updated successfully.',
            }).then(() => {
                window.location.href = '/admin/offers';
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.error || 'Failed to update the offer. Please try again.',
            });
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Unexpected Error',
            text: 'Something went wrong. Please try again later.',
        });
    }
});
</script>
