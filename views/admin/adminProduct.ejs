<%- include('../partials/admin/adminHeader.ejs') %>

<div class="container my-5">
  <h1 class="text-center mb-4">Product Management</h1>

  <div class="mid container">
    <div class="add-product-container mb-4 p-4 shadow-sm">
      <h2 class="text-primary">Manage Products</h2>
      <button onclick="window.location.href='/admin/addProduct'" class="btn btn-primary btn-lg">Add Product</button>
    </div>

    <div class="products-list">
      <h2 class="text-primary">Products</h2>
      <div class="search-container mb-3">
        <form action="" method="GET">
          <div class="input-group">
            <input type="text" class="form-control" placeholder="Search Product" name="search" value="<%= search || '' %>">
            <div class="input-group-append">
              <button type="submit" class="btn btn-outline-secondary">
                <i class="fa fa-search"></i>
              </button>
            </div>
          </div>
        </form>
      </div>

      <div class="pagination mb-3">
        <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>&search=<%= search %>"><%= i %></a>
          </li>
        <% } %>
      </div>

      <table class="table table-striped table-hover">
        <thead class="thead-light">
          <tr>
            <th>Name</th>
            <th>Category</th>
            <th>Brand</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Status</th>
            <th>AppliedOffer</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% products.forEach(product => { %>
          <tr>
            <td><%= product.productName %></td>
            <td><%= product.category.name %></td>
            <td><%= product.brand.brandName %></td>
            <td><%= product.salePrice %></td>
            <td><%= product.quantity %></td>
            <td><%= product.status %></td>
            <td><%= product.offer ? product.offer.title :"none"%></td>
            <td>
              <button class="btn btn-warning btn-sm" onclick="window.location.href='/admin/editProduct/<%= product._id %>'">Edit</button>
      <% if (product.isBlocked) { %> 
        <button onclick="handleUnblock('<%= product._id %>')" class="btn btn-success btn-sm">Unblock</button>
      <% } else { %> 
        <button onclick="handleBlock('<%= product._id %>')" class="btn btn-danger btn-sm">Block</button>
      <% } %>
              <button onclick="handleDelete('<%= product._id %>')" class="btn btn-danger btn-sm">Delete</button>
            </td>
          </tr>
          <% }); %>
        </tbody>
      </table>

      <div class="pagination">
        <% for (let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= i === currentPage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>&search=<%= search %>"><%= i %></a>
          </li>
        <% } %>
      </div>
    </div>
  </div>
</div>

<%- include('../partials/admin/adminFooter.ejs') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function handleDelete(id) {
  // Show SweetAlert confirmation dialog
  Swal.fire({
    title: "Are you sure?",
    text: "This action cannot be undone!",
    icon: "warning",
    showCancelButton: true,
    confirmButtonColor: "#3085d6",
    cancelButtonColor: "#d33",
    confirmButtonText: "Yes, delete it!",
    cancelButtonText: "Cancel"
  }).then((result) => {
    // Proceed if the user confirms
    if (result.isConfirmed) {
      fetch("/admin/deleteProduct", {
        method: "POST",
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Show success alert and redirect
          Swal.fire({
            icon: "success",
            title: "Deleted!",
            text: "The product has been deleted.",
          }).then(() => {
            window.location.href = "/admin/products";
          });
        } else {
          // Show error alert if there's an issue
          Swal.fire({
            icon: "error",
            title: "Oops",
            text: data.error
          });
        }
      })
      .catch(error => {
        Swal.fire({
          icon: "error",
          title: "Oops",
          text: "Something went wrong!"
        });
      });
    }
  });
}


  function handleUnblock(id) {
    fetch("/admin/unblockProduct", {
        method: "POST",
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          window.location.reload();
        } else {
          Swal.fire({
            icon: "error",
            title: "Oops",
            text: data.error
          });
        }
      });
  }
  function handleBlock(id) {
    fetch("/admin/blockProduct", {
        method: "POST",
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          window.location.reload();
        } else {
          Swal.fire({
            icon: "error",
            title: "Oops",
            text: data.error
          });
        }
      });
  }
</script>

<style>
 /* General Styles */
body {
    background-color: #f8f9fa;
    font-family: Arial, sans-serif;
}

h1, h2 {
    color: #343a40;
}

/* Add Product Container */
.add-product-container {
    background-color: #ffffff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

/* Products List */
.products-list {
    background-color: #ffffff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.search-container {
    display: flex;
    justify-content: flex-end;
}

/* Table Styling */
.products-list table {
    width: 100%;
    border-collapse: collapse;
}

.products-list table th {
    background-color: #007bff;
    color: #ffffff;
    padding: 16px;  /* Increased padding for better spacing */
}

.products-list table tbody td {
    padding: 16px;  /* Increased padding for better spacing */
    border-bottom: 1px solid #ddd;
}

/* Buttons */
.btn-warning {
    background-color: #ffc107;
    color: white;
}

.btn-danger {
    background-color: #dc3545;
    color: white;
}

.btn-success {
    background-color: #28a745;
    color: white;
}

/* Pagination */
.pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
}

.pagination a {
    margin: 0 5px;
    padding: 8px 12px;
    background-color: #f1f1f1;
    border: 1px solid #ddd;
    color: #333;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.3s;
}

.pagination a:hover {
    background-color: #007bff;
    color: white;
}

.pagination .active a {
    background-color: #007bff;
    color: white;
}

/* Responsive Styles */
@media (max-width: 768px) {
    .add-product-container {
        padding: 15px;
    }

    .products-list {
        padding: 15px;
    }
}
.btn-warning,.btn-success,.btn-danger{
  margin-top: 10px;
}
</style>
